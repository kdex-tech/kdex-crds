---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: kdexhosts.kdex.dev
spec:
  group: kdex.dev
  names:
    kind: KDexHost
    listKind: KDexHostList
    plural: kdexhosts
    shortNames:
    - mfe-h
    singular: kdexhost
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The state of the Ready condition
      jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KDexHost is the Schema for the kdexhosts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of KDexHost
            properties:
              appPolicy:
                description: |-
                  AppPolicy defines the policy for apps.
                  When the strict policy is enabled, an app may not embed JavaScript dependencies.
                  Validation of the application source code will fail if dependencies are not fully externalized.
                  A Host which defines the `script` app policy must not accept apps which do not comply.
                  While a non-strict Host may accept both strict and non-strict apps.
                enum:
                - Strict
                - NonStrict
                type: string
              baseMeta:
                description: baseMeta is a string containing a base set of meta tags
                  to use on every page rendered for the host.
                minLength: 5
                type: string
              defaultLang:
                description: |-
                  defaultLang is a string containing a BCP 47 language tag.
                  See https://developer.mozilla.org/en-US/docs/Glossary/BCP_47_language_tag.
                  When render page paths do not specify a 'lang' path parameter this will be the value used. When not set the default will be 'en'.
                type: string
              defaultThemeRef:
                description: defaultThemeRef is a reference to the default theme that
                  should apply to all pages bound to this host.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              domains:
                description: domains are the names by which this host is addressed.
                  The first domain listed is the preferred domain. The domains may
                  contain wildcard prefix in the form '*.'. Longest match always wins.
                items:
                  type: string
                minItems: 1
                type: array
              httpRoute:
                description: HTTPRouteSpec defines the desired state of an HTTPRoute.
                properties:
                  hostnames:
                    description: |-
                      Hostnames defines a set of hostnames that should match against the HTTP Host
                      header to select a HTTPRoute used to process the request. Implementations
                      MUST ignore any port value specified in the HTTP Host header while
                      performing a match and (absent of any applicable header modification
                      configuration) MUST forward this header unmodified to the backend.

                      Valid values for Hostnames are determined by RFC 1123 definition of a
                      hostname with 2 notable exceptions:

                      1. IPs are not allowed.
                      2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                         label must appear by itself as the first label.

                      If a hostname is specified by both the Listener and HTTPRoute, there
                      must be at least one intersecting hostname for the HTTPRoute to be
                      attached to the Listener. For example:

                      * A Listener with `test.example.com` as the hostname matches HTTPRoutes
                        that have either not specified any hostnames, or have specified at
                        least one of `test.example.com` or `*.example.com`.
                      * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                        that have either not specified any hostnames or have specified at least
                        one hostname that matches the Listener hostname. For example,
                        `*.example.com`, `test.example.com`, and `foo.test.example.com` would
                        all match. On the other hand, `example.com` and `test.example.net` would
                        not match.

                      Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                      as a suffix match. That means that a match for `*.example.com` would match
                      both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                      If both the Listener and HTTPRoute have specified hostnames, any
                      HTTPRoute hostnames that do not match the Listener hostname MUST be
                      ignored. For example, if a Listener specified `*.example.com`, and the
                      HTTPRoute specified `test.example.com` and `test.example.net`,
                      `test.example.net` must not be considered for a match.

                      If both the Listener and HTTPRoute have specified hostnames, and none
                      match with the criteria above, then the HTTPRoute is not accepted. The
                      implementation must raise an 'Accepted' Condition with a status of
                      `False` in the corresponding RouteParentStatus.

                      In the event that multiple HTTPRoutes specify intersecting hostnames (e.g.
                      overlapping wildcard matching and exact matching hostnames), precedence must
                      be given to rules from the HTTPRoute with the largest number of:

                      * Characters in a matching non-wildcard hostname.
                      * Characters in a matching hostname.

                      If ties exist across multiple Routes, the matching precedence rules for
                      HTTPRouteMatches takes over.

                      Support: Core
                    items:
                      description: |-
                        Hostname is the fully qualified domain name of a network host. This matches
                        the RFC 1123 definition of a hostname with 2 notable exceptions:

                         1. IPs are not allowed.
                         2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                            label must appear by itself as the first label.

                        Hostname can be "precise" which is a domain name without the terminating
                        dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                        domain name prefixed with a single wildcard label (e.g. `*.example.com`).

                        Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                        alphanumeric characters or '-', and must start and end with an alphanumeric
                        character. No other punctuation is allowed.
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    maxItems: 16
                    type: array
                  parentRefs:
                    description: |-
                      ParentRefs references the resources (usually Gateways) that a Route wants
                      to be attached to. Note that the referenced parent resource needs to
                      allow this for the attachment to be complete. For Gateways, that means
                      the Gateway needs to allow attachment from Routes of this kind and
                      namespace. For Services, that means the Service must either be in the same
                      namespace for a "producer" route, or the mesh implementation must support
                      and allow "consumer" routes for the referenced Service. ReferenceGrant is
                      not applicable for governing ParentRefs to Services - it is not possible to
                      create a "producer" route for a Service in a different namespace from the
                      Route.

                      There are two kinds of parent resources with "Core" support:

                      * Gateway (Gateway conformance profile)
                      * Service (Mesh conformance profile, ClusterIP Services only)

                      This API may be extended in the future to support additional kinds of parent
                      resources.

                      ParentRefs must be _distinct_. This means either that:

                      * They select different objects.  If this is the case, then parentRef
                        entries are distinct. In terms of fields, this means that the
                        multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                        be unique across all parentRef entries in the Route.
                      * They do not select different objects, but for each optional field used,
                        each ParentRef that selects the same object must set the same set of
                        optional fields to different values. If one ParentRef sets a
                        combination of optional fields, all must set the same combination.

                      Some examples:

                      * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                        same object must also set `sectionName`.
                      * If one ParentRef sets `port`, all ParentRefs referencing the same
                        object must also set `port`.
                      * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                        referencing the same object must also set `sectionName` and `port`.

                      It is possible to separately reference multiple distinct objects that may
                      be collapsed by an implementation. For example, some implementations may
                      choose to merge compatible Gateway Listeners together. If that is the
                      case, the list of routes attached to those resources should also be
                      merged.

                      Note that for ParentRefs that cross namespace boundaries, there are specific
                      rules. Cross-namespace references are only valid if they are explicitly
                      allowed by something in the namespace they are referring to. For example,
                      Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                      generic way to enable other kinds of cross-namespace reference.

                      <gateway:experimental:description>
                      ParentRefs from a Route to a Service in the same namespace are "producer"
                      routes, which apply default routing rules to inbound connections from
                      any namespace to the Service.

                      ParentRefs from a Route to a Service in a different namespace are
                      "consumer" routes, and these routing rules are only applied to outbound
                      connections originating from the same namespace as the Route, for which
                      the intended destination of the connections are a Service targeted as a
                      ParentRef of the Route.
                      </gateway:experimental:description>

                      <gateway:standard:validation:XValidation:message="sectionName must be specified when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.all(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '')) : true))">
                      <gateway:standard:validation:XValidation:message="sectionName must be unique when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName) || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName == p2.sectionName))))">
                      <gateway:experimental:validation:XValidation:message="sectionName or port must be specified when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.all(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '') && (!has(p1.port) || p1.port == 0) == (!has(p2.port) || p2.port == 0)): true))">
                      <gateway:experimental:validation:XValidation:message="sectionName or port must be unique when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName) || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port) || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port == p2.port))))">
                    items:
                      description: |-
                        ParentReference identifies an API object (usually a Gateway) that can be considered
                        a parent of this resource (usually a route). There are two kinds of parent resources
                        with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        This API may be extended in the future to support additional kinds of parent
                        resources.

                        The API object must be valid in the cluster; the Group and Kind must
                        be registered in the cluster for this reference to be valid.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.

                            <gateway:experimental:description>
                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.
                            </gateway:experimental:description>

                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.

                            <gateway:experimental:description>
                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.
                            </gateway:experimental:description>

                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    maxItems: 32
                    type: array
                  rules:
                    default:
                    - matches:
                      - path:
                          type: PathPrefix
                          value: /
                    description: Rules are a list of HTTP matchers, filters and actions.
                    items:
                      description: |-
                        HTTPRouteRule defines semantics for matching an HTTP request based on
                        conditions (matches), processing it (filters), and forwarding the request to
                        an API object (backendRefs).
                      properties:
                        backendRefs:
                          description: |-
                            BackendRefs defines the backend(s) where matching requests should be
                            sent.

                            Failure behavior here depends on how many BackendRefs are specified and
                            how many are invalid.

                            If *all* entries in BackendRefs are invalid, and there are also no filters
                            specified in this route rule, *all* traffic which matches this rule MUST
                            receive a 500 status code.

                            See the HTTPBackendRef definition for the rules about what makes a single
                            HTTPBackendRef invalid.

                            When a HTTPBackendRef is invalid, 500 status codes MUST be returned for
                            requests that would have otherwise been routed to an invalid backend. If
                            multiple backends are specified, and some are invalid, the proportion of
                            requests that would otherwise have been routed to an invalid backend
                            MUST receive a 500 status code.

                            For example, if two backends are specified with equal weights, and one is
                            invalid, 50 percent of traffic must receive a 500. Implementations may
                            choose how that 50 percent is determined.

                            Support: Core for Kubernetes Service

                            Support: Extended for Kubernetes ServiceImport

                            Support: Implementation-specific for any other resource

                            Support for weight: Core
                          items:
                            description: |-
                              HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.

                              Note that when a namespace different than the local namespace is specified, a
                              ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              <gateway:experimental:description>

                              When the BackendRef points to a Kubernetes Service, implementations SHOULD
                              honor the appProtocol field if it is set for the target Service Port.

                              Implementations supporting appProtocol SHOULD recognize the Kubernetes
                              Standard Application Protocols defined in KEP-3726.

                              If a Service appProtocol isn't specified, an implementation MAY infer the
                              backend protocol through its own means. Implementations MAY infer the
                              protocol from the Route type referring to the backend Service.

                              If a Route is not able to send traffic to the backend using the specified
                              protocol then the backend is considered invalid. Implementations MUST set the
                              "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                              </gateway:experimental:description>
                            properties:
                              filters:
                                description: |-
                                  Filters defined at this level should be executed if and only if the
                                  request is being forwarded to the backend defined here.

                                  Support: Implementation-specific (For broader support of filters, use the
                                  Filters field in HTTPRouteRule.)
                                items:
                                  description: |-
                                    HTTPRouteFilter defines processing steps that must be completed during the
                                    request or response lifecycle. HTTPRouteFilters are meant as an extension
                                    point to express processing that may be done in Gateway implementations. Some
                                    examples include request or response modification, implementing
                                    authentication strategies, rate-limiting, and traffic shaping. API
                                    guarantee/conformance is defined based on the type of the filter.
                                  properties:
                                    extensionRef:
                                      description: |-
                                        ExtensionRef is an optional, implementation-specific extension to the
                                        "filter" behavior.  For example, resource "myroutefilter" in group
                                        "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                        extended filters.

                                        This filter can be used multiple times within the same rule.

                                        Support: Implementation-specific
                                      properties:
                                        group:
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          description: Kind is kind of the referent.
                                            For example "HTTPRoute" or "Service".
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                      required:
                                      - group
                                      - kind
                                      - name
                                      type: object
                                    requestHeaderModifier:
                                      description: |-
                                        RequestHeaderModifier defines a schema for a filter that modifies request
                                        headers.

                                        Support: Core
                                      properties:
                                        add:
                                          description: |-
                                            Add adds the given header(s) (name, value) to the request
                                            before the action. It appends to any existing values associated
                                            with the header name.

                                            Input:
                                              GET /foo HTTP/1.1
                                              my-header: foo

                                            Config:
                                              add:
                                              - name: "my-header"
                                                value: "bar,baz"

                                            Output:
                                              GET /foo HTTP/1.1
                                              my-header: foo,bar,baz
                                          items:
                                            description: HTTPHeader represents an
                                              HTTP Header name and value as defined
                                              by RFC 7230.
                                            properties:
                                              name:
                                                description: |-
                                                  Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                  case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                                  If multiple entries specify equivalent header names, the first entry with
                                                  an equivalent name MUST be considered for a match. Subsequent entries
                                                  with an equivalent header name MUST be ignored. Due to the
                                                  case-insensitivity of header names, "foo" and "Foo" are considered
                                                  equivalent.
                                                maxLength: 256
                                                minLength: 1
                                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                type: string
                                              value:
                                                description: Value is the value of
                                                  HTTP Header to be matched.
                                                maxLength: 4096
                                                minLength: 1
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          maxItems: 16
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        remove:
                                          description: |-
                                            Remove the given header(s) from the HTTP request before the action. The
                                            value of Remove is a list of HTTP header names. Note that the header
                                            names are case-insensitive (see
                                            https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                            Input:
                                              GET /foo HTTP/1.1
                                              my-header1: foo
                                              my-header2: bar
                                              my-header3: baz

                                            Config:
                                              remove: ["my-header1", "my-header3"]

                                            Output:
                                              GET /foo HTTP/1.1
                                              my-header2: bar
                                          items:
                                            type: string
                                          maxItems: 16
                                          type: array
                                          x-kubernetes-list-type: set
                                        set:
                                          description: |-
                                            Set overwrites the request with the given header (name, value)
                                            before the action.

                                            Input:
                                              GET /foo HTTP/1.1
                                              my-header: foo

                                            Config:
                                              set:
                                              - name: "my-header"
                                                value: "bar"

                                            Output:
                                              GET /foo HTTP/1.1
                                              my-header: bar
                                          items:
                                            description: HTTPHeader represents an
                                              HTTP Header name and value as defined
                                              by RFC 7230.
                                            properties:
                                              name:
                                                description: |-
                                                  Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                  case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                                  If multiple entries specify equivalent header names, the first entry with
                                                  an equivalent name MUST be considered for a match. Subsequent entries
                                                  with an equivalent header name MUST be ignored. Due to the
                                                  case-insensitivity of header names, "foo" and "Foo" are considered
                                                  equivalent.
                                                maxLength: 256
                                                minLength: 1
                                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                type: string
                                              value:
                                                description: Value is the value of
                                                  HTTP Header to be matched.
                                                maxLength: 4096
                                                minLength: 1
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          maxItems: 16
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                      type: object
                                    requestMirror:
                                      description: |-
                                        RequestMirror defines a schema for a filter that mirrors requests.
                                        Requests are sent to the specified destination, but responses from
                                        that destination are ignored.

                                        This filter can be used multiple times within the same rule. Note that
                                        not all implementations will be able to support mirroring to multiple
                                        backends.

                                        Support: Extended
                                      properties:
                                        backendRef:
                                          description: |-
                                            BackendRef references a resource where mirrored requests are sent.

                                            Mirrored requests must be sent only to a single destination endpoint
                                            within this BackendRef, irrespective of how many endpoints are present
                                            within this BackendRef.

                                            If the referent cannot be found, this BackendRef is invalid and must be
                                            dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                            condition on the Route status is set to `status: False` and not configure
                                            this backend in the underlying implementation.

                                            If there is a cross-namespace reference to an *existing* object
                                            that is not allowed by a ReferenceGrant, the controller must ensure the
                                            "ResolvedRefs"  condition on the Route is set to `status: False`,
                                            with the "RefNotPermitted" reason and not configure this backend in the
                                            underlying implementation.

                                            In either error case, the Message of the `ResolvedRefs` Condition
                                            should be used to provide more detail about the problem.

                                            Support: Extended for Kubernetes Service

                                            Support: Implementation-specific for any other resource
                                          properties:
                                            group:
                                              default: ""
                                              description: |-
                                                Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                                When unspecified or empty string, core API group is inferred.
                                              maxLength: 253
                                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                              type: string
                                            kind:
                                              default: Service
                                              description: |-
                                                Kind is the Kubernetes resource kind of the referent. For example
                                                "Service".

                                                Defaults to "Service" when not specified.

                                                ExternalName services can refer to CNAME DNS records that may live
                                                outside of the cluster and as such are difficult to reason about in
                                                terms of conformance. They also may not be safe to forward to (see
                                                CVE-2021-25740 for more information). Implementations SHOULD NOT
                                                support ExternalName Services.

                                                Support: Core (Services with a type other than ExternalName)

                                                Support: Implementation-specific (Services with type ExternalName)
                                              maxLength: 63
                                              minLength: 1
                                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                              type: string
                                            name:
                                              description: Name is the name of the
                                                referent.
                                              maxLength: 253
                                              minLength: 1
                                              type: string
                                            namespace:
                                              description: |-
                                                Namespace is the namespace of the backend. When unspecified, the local
                                                namespace is inferred.

                                                Note that when a namespace different than the local namespace is specified,
                                                a ReferenceGrant object is required in the referent namespace to allow that
                                                namespace's owner to accept the reference. See the ReferenceGrant
                                                documentation for details.

                                                Support: Core
                                              maxLength: 63
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                            port:
                                              description: |-
                                                Port specifies the destination port number to use for this resource.
                                                Port is required when the referent is a Kubernetes Service. In this
                                                case, the port number is the service port number, not the target port.
                                                For other resources, destination port might be derived from the referent
                                                resource or this field.
                                              format: int32
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                          required:
                                          - name
                                          type: object
                                          x-kubernetes-validations:
                                          - message: Must have port for Service reference
                                            rule: '(size(self.group) == 0 && self.kind
                                              == ''Service'') ? has(self.port) : true'
                                      required:
                                      - backendRef
                                      type: object
                                    requestRedirect:
                                      description: |-
                                        RequestRedirect defines a schema for a filter that responds to the
                                        request with an HTTP redirection.

                                        Support: Core
                                      properties:
                                        hostname:
                                          description: |-
                                            Hostname is the hostname to be used in the value of the `Location`
                                            header in the response.
                                            When empty, the hostname in the `Host` header of the request is used.

                                            Support: Core
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        path:
                                          description: |-
                                            Path defines parameters used to modify the path of the incoming request.
                                            The modified path is then used to construct the `Location` header. When
                                            empty, the request path is used as-is.

                                            Support: Extended
                                          properties:
                                            replaceFullPath:
                                              description: |-
                                                ReplaceFullPath specifies the value with which to replace the full path
                                                of a request during a rewrite or redirect.
                                              maxLength: 1024
                                              type: string
                                            replacePrefixMatch:
                                              description: |-
                                                ReplacePrefixMatch specifies the value with which to replace the prefix
                                                match of a request during a rewrite or redirect. For example, a request
                                                to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                                of "/xyz" would be modified to "/xyz/bar".

                                                Note that this matches the behavior of the PathPrefix match type. This
                                                matches full path elements. A path element refers to the list of labels
                                                in the path split by the `/` separator. When specified, a trailing `/` is
                                                ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                                match the prefix `/abc`, but the path `/abcd` would not.

                                                ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                                Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                                the implementation setting the Accepted Condition for the Route to `status: False`.

                                                Request Path | Prefix Match | Replace Prefix | Modified Path
                                              maxLength: 1024
                                              type: string
                                            type:
                                              description: |-
                                                Type defines the type of path modifier. Additional types may be
                                                added in a future release of the API.

                                                Note that values may be added to this enum, implementations
                                                must ensure that unknown values will not cause a crash.

                                                Unknown values here must result in the implementation setting the
                                                Accepted Condition for the Route to `status: False`, with a
                                                Reason of `UnsupportedValue`.
                                              enum:
                                              - ReplaceFullPath
                                              - ReplacePrefixMatch
                                              type: string
                                          required:
                                          - type
                                          type: object
                                          x-kubernetes-validations:
                                          - message: replaceFullPath must be specified
                                              when type is set to 'ReplaceFullPath'
                                            rule: 'self.type == ''ReplaceFullPath''
                                              ? has(self.replaceFullPath) : true'
                                          - message: type must be 'ReplaceFullPath'
                                              when replaceFullPath is set
                                            rule: 'has(self.replaceFullPath) ? self.type
                                              == ''ReplaceFullPath'' : true'
                                          - message: replacePrefixMatch must be specified
                                              when type is set to 'ReplacePrefixMatch'
                                            rule: 'self.type == ''ReplacePrefixMatch''
                                              ? has(self.replacePrefixMatch) : true'
                                          - message: type must be 'ReplacePrefixMatch'
                                              when replacePrefixMatch is set
                                            rule: 'has(self.replacePrefixMatch) ?
                                              self.type == ''ReplacePrefixMatch''
                                              : true'
                                        port:
                                          description: |-
                                            Port is the port to be used in the value of the `Location`
                                            header in the response.

                                            If no port is specified, the redirect port MUST be derived using the
                                            following rules:

                                            * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                              port associated with the redirect scheme. Specifically "http" to port 80
                                              and "https" to port 443. If the redirect scheme does not have a
                                              well-known port, the listener port of the Gateway SHOULD be used.
                                            * If redirect scheme is empty, the redirect port MUST be the Gateway
                                              Listener port.

                                            Implementations SHOULD NOT add the port number in the 'Location'
                                            header in the following cases:

                                            * A Location header that will use HTTP (whether that is determined via
                                              the Listener protocol or the Scheme field) _and_ use port 80.
                                            * A Location header that will use HTTPS (whether that is determined via
                                              the Listener protocol or the Scheme field) _and_ use port 443.

                                            Support: Extended
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        scheme:
                                          description: |-
                                            Scheme is the scheme to be used in the value of the `Location` header in
                                            the response. When empty, the scheme of the request is used.

                                            Scheme redirects can affect the port of the redirect, for more information,
                                            refer to the documentation for the port field of this filter.

                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.

                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.

                                            Support: Extended
                                          enum:
                                          - http
                                          - https
                                          type: string
                                        statusCode:
                                          default: 302
                                          description: |-
                                            StatusCode is the HTTP status code to be used in response.

                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.

                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.

                                            Support: Core
                                          enum:
                                          - 301
                                          - 302
                                          type: integer
                                      type: object
                                    responseHeaderModifier:
                                      description: |-
                                        ResponseHeaderModifier defines a schema for a filter that modifies response
                                        headers.

                                        Support: Extended
                                      properties:
                                        add:
                                          description: |-
                                            Add adds the given header(s) (name, value) to the request
                                            before the action. It appends to any existing values associated
                                            with the header name.

                                            Input:
                                              GET /foo HTTP/1.1
                                              my-header: foo

                                            Config:
                                              add:
                                              - name: "my-header"
                                                value: "bar,baz"

                                            Output:
                                              GET /foo HTTP/1.1
                                              my-header: foo,bar,baz
                                          items:
                                            description: HTTPHeader represents an
                                              HTTP Header name and value as defined
                                              by RFC 7230.
                                            properties:
                                              name:
                                                description: |-
                                                  Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                  case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                                  If multiple entries specify equivalent header names, the first entry with
                                                  an equivalent name MUST be considered for a match. Subsequent entries
                                                  with an equivalent header name MUST be ignored. Due to the
                                                  case-insensitivity of header names, "foo" and "Foo" are considered
                                                  equivalent.
                                                maxLength: 256
                                                minLength: 1
                                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                type: string
                                              value:
                                                description: Value is the value of
                                                  HTTP Header to be matched.
                                                maxLength: 4096
                                                minLength: 1
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          maxItems: 16
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        remove:
                                          description: |-
                                            Remove the given header(s) from the HTTP request before the action. The
                                            value of Remove is a list of HTTP header names. Note that the header
                                            names are case-insensitive (see
                                            https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                            Input:
                                              GET /foo HTTP/1.1
                                              my-header1: foo
                                              my-header2: bar
                                              my-header3: baz

                                            Config:
                                              remove: ["my-header1", "my-header3"]

                                            Output:
                                              GET /foo HTTP/1.1
                                              my-header2: bar
                                          items:
                                            type: string
                                          maxItems: 16
                                          type: array
                                          x-kubernetes-list-type: set
                                        set:
                                          description: |-
                                            Set overwrites the request with the given header (name, value)
                                            before the action.

                                            Input:
                                              GET /foo HTTP/1.1
                                              my-header: foo

                                            Config:
                                              set:
                                              - name: "my-header"
                                                value: "bar"

                                            Output:
                                              GET /foo HTTP/1.1
                                              my-header: bar
                                          items:
                                            description: HTTPHeader represents an
                                              HTTP Header name and value as defined
                                              by RFC 7230.
                                            properties:
                                              name:
                                                description: |-
                                                  Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                  case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                                  If multiple entries specify equivalent header names, the first entry with
                                                  an equivalent name MUST be considered for a match. Subsequent entries
                                                  with an equivalent header name MUST be ignored. Due to the
                                                  case-insensitivity of header names, "foo" and "Foo" are considered
                                                  equivalent.
                                                maxLength: 256
                                                minLength: 1
                                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                type: string
                                              value:
                                                description: Value is the value of
                                                  HTTP Header to be matched.
                                                maxLength: 4096
                                                minLength: 1
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          maxItems: 16
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                      type: object
                                    type:
                                      description: |-
                                        Type identifies the type of filter to apply. As with other API fields,
                                        types are classified into three conformance levels:

                                        - Core: Filter types and their corresponding configuration defined by
                                          "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                          implementations must support core filters.

                                        - Extended: Filter types and their corresponding configuration defined by
                                          "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                          are encouraged to support extended filters.

                                        - Implementation-specific: Filters that are defined and supported by
                                          specific vendors.
                                          In the future, filters showing convergence in behavior across multiple
                                          implementations will be considered for inclusion in extended or core
                                          conformance levels. Filter-specific configuration for such filters
                                          is specified using the ExtensionRef field. `Type` should be set to
                                          "ExtensionRef" for custom filters.

                                        Implementers are encouraged to define custom implementation types to
                                        extend the core API with implementation-specific behavior.

                                        If a reference to a custom filter type cannot be resolved, the filter
                                        MUST NOT be skipped. Instead, requests that would have been processed by
                                        that filter MUST receive a HTTP error response.

                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.

                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.
                                      enum:
                                      - RequestHeaderModifier
                                      - ResponseHeaderModifier
                                      - RequestMirror
                                      - RequestRedirect
                                      - URLRewrite
                                      - ExtensionRef
                                      type: string
                                    urlRewrite:
                                      description: |-
                                        URLRewrite defines a schema for a filter that modifies a request during forwarding.

                                        Support: Extended
                                      properties:
                                        hostname:
                                          description: |-
                                            Hostname is the value to be used to replace the Host header value during
                                            forwarding.

                                            Support: Extended
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        path:
                                          description: |-
                                            Path defines a path rewrite.

                                            Support: Extended
                                          properties:
                                            replaceFullPath:
                                              description: |-
                                                ReplaceFullPath specifies the value with which to replace the full path
                                                of a request during a rewrite or redirect.
                                              maxLength: 1024
                                              type: string
                                            replacePrefixMatch:
                                              description: |-
                                                ReplacePrefixMatch specifies the value with which to replace the prefix
                                                match of a request during a rewrite or redirect. For example, a request
                                                to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                                of "/xyz" would be modified to "/xyz/bar".

                                                Note that this matches the behavior of the PathPrefix match type. This
                                                matches full path elements. A path element refers to the list of labels
                                                in the path split by the `/` separator. When specified, a trailing `/` is
                                                ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                                match the prefix `/abc`, but the path `/abcd` would not.

                                                ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                                Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                                the implementation setting the Accepted Condition for the Route to `status: False`.

                                                Request Path | Prefix Match | Replace Prefix | Modified Path
                                              maxLength: 1024
                                              type: string
                                            type:
                                              description: |-
                                                Type defines the type of path modifier. Additional types may be
                                                added in a future release of the API.

                                                Note that values may be added to this enum, implementations
                                                must ensure that unknown values will not cause a crash.

                                                Unknown values here must result in the implementation setting the
                                                Accepted Condition for the Route to `status: False`, with a
                                                Reason of `UnsupportedValue`.
                                              enum:
                                              - ReplaceFullPath
                                              - ReplacePrefixMatch
                                              type: string
                                          required:
                                          - type
                                          type: object
                                          x-kubernetes-validations:
                                          - message: replaceFullPath must be specified
                                              when type is set to 'ReplaceFullPath'
                                            rule: 'self.type == ''ReplaceFullPath''
                                              ? has(self.replaceFullPath) : true'
                                          - message: type must be 'ReplaceFullPath'
                                              when replaceFullPath is set
                                            rule: 'has(self.replaceFullPath) ? self.type
                                              == ''ReplaceFullPath'' : true'
                                          - message: replacePrefixMatch must be specified
                                              when type is set to 'ReplacePrefixMatch'
                                            rule: 'self.type == ''ReplacePrefixMatch''
                                              ? has(self.replacePrefixMatch) : true'
                                          - message: type must be 'ReplacePrefixMatch'
                                              when replacePrefixMatch is set
                                            rule: 'has(self.replacePrefixMatch) ?
                                              self.type == ''ReplacePrefixMatch''
                                              : true'
                                      type: object
                                  required:
                                  - type
                                  type: object
                                  x-kubernetes-validations:
                                  - message: filter.requestHeaderModifier must be
                                      nil if the filter.type is not RequestHeaderModifier
                                    rule: '!(has(self.requestHeaderModifier) && self.type
                                      != ''RequestHeaderModifier'')'
                                  - message: filter.requestHeaderModifier must be
                                      specified for RequestHeaderModifier filter.type
                                    rule: '!(!has(self.requestHeaderModifier) && self.type
                                      == ''RequestHeaderModifier'')'
                                  - message: filter.responseHeaderModifier must be
                                      nil if the filter.type is not ResponseHeaderModifier
                                    rule: '!(has(self.responseHeaderModifier) && self.type
                                      != ''ResponseHeaderModifier'')'
                                  - message: filter.responseHeaderModifier must be
                                      specified for ResponseHeaderModifier filter.type
                                    rule: '!(!has(self.responseHeaderModifier) &&
                                      self.type == ''ResponseHeaderModifier'')'
                                  - message: filter.requestMirror must be nil if the
                                      filter.type is not RequestMirror
                                    rule: '!(has(self.requestMirror) && self.type
                                      != ''RequestMirror'')'
                                  - message: filter.requestMirror must be specified
                                      for RequestMirror filter.type
                                    rule: '!(!has(self.requestMirror) && self.type
                                      == ''RequestMirror'')'
                                  - message: filter.requestRedirect must be nil if
                                      the filter.type is not RequestRedirect
                                    rule: '!(has(self.requestRedirect) && self.type
                                      != ''RequestRedirect'')'
                                  - message: filter.requestRedirect must be specified
                                      for RequestRedirect filter.type
                                    rule: '!(!has(self.requestRedirect) && self.type
                                      == ''RequestRedirect'')'
                                  - message: filter.urlRewrite must be nil if the
                                      filter.type is not URLRewrite
                                    rule: '!(has(self.urlRewrite) && self.type !=
                                      ''URLRewrite'')'
                                  - message: filter.urlRewrite must be specified for
                                      URLRewrite filter.type
                                    rule: '!(!has(self.urlRewrite) && self.type ==
                                      ''URLRewrite'')'
                                  - message: filter.extensionRef must be nil if the
                                      filter.type is not ExtensionRef
                                    rule: '!(has(self.extensionRef) && self.type !=
                                      ''ExtensionRef'')'
                                  - message: filter.extensionRef must be specified
                                      for ExtensionRef filter.type
                                    rule: '!(!has(self.extensionRef) && self.type
                                      == ''ExtensionRef'')'
                                maxItems: 16
                                type: array
                                x-kubernetes-validations:
                                - message: May specify either httpRouteFilterRequestRedirect
                                    or httpRouteFilterRequestRewrite, but not both
                                  rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                    && self.exists(f, f.type == ''URLRewrite''))'
                                - message: May specify either httpRouteFilterRequestRedirect
                                    or httpRouteFilterRequestRewrite, but not both
                                  rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                    && self.exists(f, f.type == ''URLRewrite''))'
                                - message: RequestHeaderModifier filter cannot be
                                    repeated
                                  rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                    <= 1
                                - message: ResponseHeaderModifier filter cannot be
                                    repeated
                                  rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                    <= 1
                                - message: RequestRedirect filter cannot be repeated
                                  rule: self.filter(f, f.type == 'RequestRedirect').size()
                                    <= 1
                                - message: URLRewrite filter cannot be repeated
                                  rule: self.filter(f, f.type == 'URLRewrite').size()
                                    <= 1
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Service
                                description: |-
                                  Kind is the Kubernetes resource kind of the referent. For example
                                  "Service".

                                  Defaults to "Service" when not specified.

                                  ExternalName services can refer to CNAME DNS records that may live
                                  outside of the cluster and as such are difficult to reason about in
                                  terms of conformance. They also may not be safe to forward to (see
                                  CVE-2021-25740 for more information). Implementations SHOULD NOT
                                  support ExternalName Services.

                                  Support: Core (Services with a type other than ExternalName)

                                  Support: Implementation-specific (Services with type ExternalName)
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the backend. When unspecified, the local
                                  namespace is inferred.

                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.

                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              port:
                                description: |-
                                  Port specifies the destination port number to use for this resource.
                                  Port is required when the referent is a Kubernetes Service. In this
                                  case, the port number is the service port number, not the target port.
                                  For other resources, destination port might be derived from the referent
                                  resource or this field.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              weight:
                                default: 1
                                description: |-
                                  Weight specifies the proportion of requests forwarded to the referenced
                                  backend. This is computed as weight/(sum of all weights in this
                                  BackendRefs list). For non-zero values, there may be some epsilon from
                                  the exact proportion defined here depending on the precision an
                                  implementation supports. Weight is not a percentage and the sum of
                                  weights does not need to equal 100.

                                  If only one backend is specified and it has a weight greater than 0, 100%
                                  of the traffic is forwarded to that backend. If weight is set to 0, no
                                  traffic should be forwarded for this entry. If unspecified, weight
                                  defaults to 1.

                                  Support for this field varies based on the context where used.
                                format: int32
                                maximum: 1000000
                                minimum: 0
                                type: integer
                            required:
                            - name
                            type: object
                            x-kubernetes-validations:
                            - message: Must have port for Service reference
                              rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                ? has(self.port) : true'
                          maxItems: 16
                          type: array
                        filters:
                          description: |-
                            Filters define the filters that are applied to requests that match
                            this rule.

                            Wherever possible, implementations SHOULD implement filters in the order
                            they are specified.

                            Implementations MAY choose to implement this ordering strictly, rejecting
                            any combination or order of filters that can not be supported. If implementations
                            choose a strict interpretation of filter ordering, they MUST clearly document
                            that behavior.

                            To reject an invalid combination or order of filters, implementations SHOULD
                            consider the Route Rules with this configuration invalid. If all Route Rules
                            in a Route are invalid, the entire Route would be considered invalid. If only
                            a portion of Route Rules are invalid, implementations MUST set the
                            "PartiallyInvalid" condition for the Route.

                            Conformance-levels at this level are defined based on the type of filter:

                            - ALL core filters MUST be supported by all implementations.
                            - Implementers are encouraged to support extended filters.
                            - Implementation-specific custom filters have no API guarantees across
                              implementations.

                            Specifying the same filter multiple times is not supported unless explicitly
                            indicated in the filter.

                            All filters are expected to be compatible with each other except for the
                            URLRewrite and RequestRedirect filters, which may not be combined. If an
                            implementation can not support other combinations of filters, they must clearly
                            document that limitation. In cases where incompatible or unsupported
                            filters are specified and cause the `Accepted` condition to be set to status
                            `False`, implementations may use the `IncompatibleFilters` reason to specify
                            this configuration error.

                            Support: Core
                          items:
                            description: |-
                              HTTPRouteFilter defines processing steps that must be completed during the
                              request or response lifecycle. HTTPRouteFilters are meant as an extension
                              point to express processing that may be done in Gateway implementations. Some
                              examples include request or response modification, implementing
                              authentication strategies, rate-limiting, and traffic shaping. API
                              guarantee/conformance is defined based on the type of the filter.
                            properties:
                              extensionRef:
                                description: |-
                                  ExtensionRef is an optional, implementation-specific extension to the
                                  "filter" behavior.  For example, resource "myroutefilter" in group
                                  "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                  extended filters.

                                  This filter can be used multiple times within the same rule.

                                  Support: Implementation-specific
                                properties:
                                  group:
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    description: Kind is kind of the referent. For
                                      example "HTTPRoute" or "Service".
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                required:
                                - group
                                - kind
                                - name
                                type: object
                              requestHeaderModifier:
                                description: |-
                                  RequestHeaderModifier defines a schema for a filter that modifies request
                                  headers.

                                  Support: Core
                                properties:
                                  add:
                                    description: |-
                                      Add adds the given header(s) (name, value) to the request
                                      before the action. It appends to any existing values associated
                                      with the header name.

                                      Input:
                                        GET /foo HTTP/1.1
                                        my-header: foo

                                      Config:
                                        add:
                                        - name: "my-header"
                                          value: "bar,baz"

                                      Output:
                                        GET /foo HTTP/1.1
                                        my-header: foo,bar,baz
                                    items:
                                      description: HTTPHeader represents an HTTP Header
                                        name and value as defined by RFC 7230.
                                      properties:
                                        name:
                                          description: |-
                                            Name is the name of the HTTP Header to be matched. Name matching MUST be
                                            case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                            If multiple entries specify equivalent header names, the first entry with
                                            an equivalent name MUST be considered for a match. Subsequent entries
                                            with an equivalent header name MUST be ignored. Due to the
                                            case-insensitivity of header names, "foo" and "Foo" are considered
                                            equivalent.
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        value:
                                          description: Value is the value of HTTP
                                            Header to be matched.
                                          maxLength: 4096
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  remove:
                                    description: |-
                                      Remove the given header(s) from the HTTP request before the action. The
                                      value of Remove is a list of HTTP header names. Note that the header
                                      names are case-insensitive (see
                                      https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                      Input:
                                        GET /foo HTTP/1.1
                                        my-header1: foo
                                        my-header2: bar
                                        my-header3: baz

                                      Config:
                                        remove: ["my-header1", "my-header3"]

                                      Output:
                                        GET /foo HTTP/1.1
                                        my-header2: bar
                                    items:
                                      type: string
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-type: set
                                  set:
                                    description: |-
                                      Set overwrites the request with the given header (name, value)
                                      before the action.

                                      Input:
                                        GET /foo HTTP/1.1
                                        my-header: foo

                                      Config:
                                        set:
                                        - name: "my-header"
                                          value: "bar"

                                      Output:
                                        GET /foo HTTP/1.1
                                        my-header: bar
                                    items:
                                      description: HTTPHeader represents an HTTP Header
                                        name and value as defined by RFC 7230.
                                      properties:
                                        name:
                                          description: |-
                                            Name is the name of the HTTP Header to be matched. Name matching MUST be
                                            case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                            If multiple entries specify equivalent header names, the first entry with
                                            an equivalent name MUST be considered for a match. Subsequent entries
                                            with an equivalent header name MUST be ignored. Due to the
                                            case-insensitivity of header names, "foo" and "Foo" are considered
                                            equivalent.
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        value:
                                          description: Value is the value of HTTP
                                            Header to be matched.
                                          maxLength: 4096
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                type: object
                              requestMirror:
                                description: |-
                                  RequestMirror defines a schema for a filter that mirrors requests.
                                  Requests are sent to the specified destination, but responses from
                                  that destination are ignored.

                                  This filter can be used multiple times within the same rule. Note that
                                  not all implementations will be able to support mirroring to multiple
                                  backends.

                                  Support: Extended
                                properties:
                                  backendRef:
                                    description: |-
                                      BackendRef references a resource where mirrored requests are sent.

                                      Mirrored requests must be sent only to a single destination endpoint
                                      within this BackendRef, irrespective of how many endpoints are present
                                      within this BackendRef.

                                      If the referent cannot be found, this BackendRef is invalid and must be
                                      dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                      condition on the Route status is set to `status: False` and not configure
                                      this backend in the underlying implementation.

                                      If there is a cross-namespace reference to an *existing* object
                                      that is not allowed by a ReferenceGrant, the controller must ensure the
                                      "ResolvedRefs"  condition on the Route is set to `status: False`,
                                      with the "RefNotPermitted" reason and not configure this backend in the
                                      underlying implementation.

                                      In either error case, the Message of the `ResolvedRefs` Condition
                                      should be used to provide more detail about the problem.

                                      Support: Extended for Kubernetes Service

                                      Support: Implementation-specific for any other resource
                                    properties:
                                      group:
                                        default: ""
                                        description: |-
                                          Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                          When unspecified or empty string, core API group is inferred.
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      kind:
                                        default: Service
                                        description: |-
                                          Kind is the Kubernetes resource kind of the referent. For example
                                          "Service".

                                          Defaults to "Service" when not specified.

                                          ExternalName services can refer to CNAME DNS records that may live
                                          outside of the cluster and as such are difficult to reason about in
                                          terms of conformance. They also may not be safe to forward to (see
                                          CVE-2021-25740 for more information). Implementations SHOULD NOT
                                          support ExternalName Services.

                                          Support: Core (Services with a type other than ExternalName)

                                          Support: Implementation-specific (Services with type ExternalName)
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        type: string
                                      name:
                                        description: Name is the name of the referent.
                                        maxLength: 253
                                        minLength: 1
                                        type: string
                                      namespace:
                                        description: |-
                                          Namespace is the namespace of the backend. When unspecified, the local
                                          namespace is inferred.

                                          Note that when a namespace different than the local namespace is specified,
                                          a ReferenceGrant object is required in the referent namespace to allow that
                                          namespace's owner to accept the reference. See the ReferenceGrant
                                          documentation for details.

                                          Support: Core
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                      port:
                                        description: |-
                                          Port specifies the destination port number to use for this resource.
                                          Port is required when the referent is a Kubernetes Service. In this
                                          case, the port number is the service port number, not the target port.
                                          For other resources, destination port might be derived from the referent
                                          resource or this field.
                                        format: int32
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                    required:
                                    - name
                                    type: object
                                    x-kubernetes-validations:
                                    - message: Must have port for Service reference
                                      rule: '(size(self.group) == 0 && self.kind ==
                                        ''Service'') ? has(self.port) : true'
                                required:
                                - backendRef
                                type: object
                              requestRedirect:
                                description: |-
                                  RequestRedirect defines a schema for a filter that responds to the
                                  request with an HTTP redirection.

                                  Support: Core
                                properties:
                                  hostname:
                                    description: |-
                                      Hostname is the hostname to be used in the value of the `Location`
                                      header in the response.
                                      When empty, the hostname in the `Host` header of the request is used.

                                      Support: Core
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  path:
                                    description: |-
                                      Path defines parameters used to modify the path of the incoming request.
                                      The modified path is then used to construct the `Location` header. When
                                      empty, the request path is used as-is.

                                      Support: Extended
                                    properties:
                                      replaceFullPath:
                                        description: |-
                                          ReplaceFullPath specifies the value with which to replace the full path
                                          of a request during a rewrite or redirect.
                                        maxLength: 1024
                                        type: string
                                      replacePrefixMatch:
                                        description: |-
                                          ReplacePrefixMatch specifies the value with which to replace the prefix
                                          match of a request during a rewrite or redirect. For example, a request
                                          to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                          of "/xyz" would be modified to "/xyz/bar".

                                          Note that this matches the behavior of the PathPrefix match type. This
                                          matches full path elements. A path element refers to the list of labels
                                          in the path split by the `/` separator. When specified, a trailing `/` is
                                          ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                          match the prefix `/abc`, but the path `/abcd` would not.

                                          ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                          Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                          the implementation setting the Accepted Condition for the Route to `status: False`.

                                          Request Path | Prefix Match | Replace Prefix | Modified Path
                                        maxLength: 1024
                                        type: string
                                      type:
                                        description: |-
                                          Type defines the type of path modifier. Additional types may be
                                          added in a future release of the API.

                                          Note that values may be added to this enum, implementations
                                          must ensure that unknown values will not cause a crash.

                                          Unknown values here must result in the implementation setting the
                                          Accepted Condition for the Route to `status: False`, with a
                                          Reason of `UnsupportedValue`.
                                        enum:
                                        - ReplaceFullPath
                                        - ReplacePrefixMatch
                                        type: string
                                    required:
                                    - type
                                    type: object
                                    x-kubernetes-validations:
                                    - message: replaceFullPath must be specified when
                                        type is set to 'ReplaceFullPath'
                                      rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                        : true'
                                    - message: type must be 'ReplaceFullPath' when
                                        replaceFullPath is set
                                      rule: 'has(self.replaceFullPath) ? self.type
                                        == ''ReplaceFullPath'' : true'
                                    - message: replacePrefixMatch must be specified
                                        when type is set to 'ReplacePrefixMatch'
                                      rule: 'self.type == ''ReplacePrefixMatch'' ?
                                        has(self.replacePrefixMatch) : true'
                                    - message: type must be 'ReplacePrefixMatch' when
                                        replacePrefixMatch is set
                                      rule: 'has(self.replacePrefixMatch) ? self.type
                                        == ''ReplacePrefixMatch'' : true'
                                  port:
                                    description: |-
                                      Port is the port to be used in the value of the `Location`
                                      header in the response.

                                      If no port is specified, the redirect port MUST be derived using the
                                      following rules:

                                      * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                        port associated with the redirect scheme. Specifically "http" to port 80
                                        and "https" to port 443. If the redirect scheme does not have a
                                        well-known port, the listener port of the Gateway SHOULD be used.
                                      * If redirect scheme is empty, the redirect port MUST be the Gateway
                                        Listener port.

                                      Implementations SHOULD NOT add the port number in the 'Location'
                                      header in the following cases:

                                      * A Location header that will use HTTP (whether that is determined via
                                        the Listener protocol or the Scheme field) _and_ use port 80.
                                      * A Location header that will use HTTPS (whether that is determined via
                                        the Listener protocol or the Scheme field) _and_ use port 443.

                                      Support: Extended
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  scheme:
                                    description: |-
                                      Scheme is the scheme to be used in the value of the `Location` header in
                                      the response. When empty, the scheme of the request is used.

                                      Scheme redirects can affect the port of the redirect, for more information,
                                      refer to the documentation for the port field of this filter.

                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.

                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.

                                      Support: Extended
                                    enum:
                                    - http
                                    - https
                                    type: string
                                  statusCode:
                                    default: 302
                                    description: |-
                                      StatusCode is the HTTP status code to be used in response.

                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.

                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.

                                      Support: Core
                                    enum:
                                    - 301
                                    - 302
                                    type: integer
                                type: object
                              responseHeaderModifier:
                                description: |-
                                  ResponseHeaderModifier defines a schema for a filter that modifies response
                                  headers.

                                  Support: Extended
                                properties:
                                  add:
                                    description: |-
                                      Add adds the given header(s) (name, value) to the request
                                      before the action. It appends to any existing values associated
                                      with the header name.

                                      Input:
                                        GET /foo HTTP/1.1
                                        my-header: foo

                                      Config:
                                        add:
                                        - name: "my-header"
                                          value: "bar,baz"

                                      Output:
                                        GET /foo HTTP/1.1
                                        my-header: foo,bar,baz
                                    items:
                                      description: HTTPHeader represents an HTTP Header
                                        name and value as defined by RFC 7230.
                                      properties:
                                        name:
                                          description: |-
                                            Name is the name of the HTTP Header to be matched. Name matching MUST be
                                            case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                            If multiple entries specify equivalent header names, the first entry with
                                            an equivalent name MUST be considered for a match. Subsequent entries
                                            with an equivalent header name MUST be ignored. Due to the
                                            case-insensitivity of header names, "foo" and "Foo" are considered
                                            equivalent.
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        value:
                                          description: Value is the value of HTTP
                                            Header to be matched.
                                          maxLength: 4096
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  remove:
                                    description: |-
                                      Remove the given header(s) from the HTTP request before the action. The
                                      value of Remove is a list of HTTP header names. Note that the header
                                      names are case-insensitive (see
                                      https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                      Input:
                                        GET /foo HTTP/1.1
                                        my-header1: foo
                                        my-header2: bar
                                        my-header3: baz

                                      Config:
                                        remove: ["my-header1", "my-header3"]

                                      Output:
                                        GET /foo HTTP/1.1
                                        my-header2: bar
                                    items:
                                      type: string
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-type: set
                                  set:
                                    description: |-
                                      Set overwrites the request with the given header (name, value)
                                      before the action.

                                      Input:
                                        GET /foo HTTP/1.1
                                        my-header: foo

                                      Config:
                                        set:
                                        - name: "my-header"
                                          value: "bar"

                                      Output:
                                        GET /foo HTTP/1.1
                                        my-header: bar
                                    items:
                                      description: HTTPHeader represents an HTTP Header
                                        name and value as defined by RFC 7230.
                                      properties:
                                        name:
                                          description: |-
                                            Name is the name of the HTTP Header to be matched. Name matching MUST be
                                            case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                            If multiple entries specify equivalent header names, the first entry with
                                            an equivalent name MUST be considered for a match. Subsequent entries
                                            with an equivalent header name MUST be ignored. Due to the
                                            case-insensitivity of header names, "foo" and "Foo" are considered
                                            equivalent.
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        value:
                                          description: Value is the value of HTTP
                                            Header to be matched.
                                          maxLength: 4096
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                type: object
                              type:
                                description: |-
                                  Type identifies the type of filter to apply. As with other API fields,
                                  types are classified into three conformance levels:

                                  - Core: Filter types and their corresponding configuration defined by
                                    "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                    implementations must support core filters.

                                  - Extended: Filter types and their corresponding configuration defined by
                                    "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                    are encouraged to support extended filters.

                                  - Implementation-specific: Filters that are defined and supported by
                                    specific vendors.
                                    In the future, filters showing convergence in behavior across multiple
                                    implementations will be considered for inclusion in extended or core
                                    conformance levels. Filter-specific configuration for such filters
                                    is specified using the ExtensionRef field. `Type` should be set to
                                    "ExtensionRef" for custom filters.

                                  Implementers are encouraged to define custom implementation types to
                                  extend the core API with implementation-specific behavior.

                                  If a reference to a custom filter type cannot be resolved, the filter
                                  MUST NOT be skipped. Instead, requests that would have been processed by
                                  that filter MUST receive a HTTP error response.

                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.

                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.
                                enum:
                                - RequestHeaderModifier
                                - ResponseHeaderModifier
                                - RequestMirror
                                - RequestRedirect
                                - URLRewrite
                                - ExtensionRef
                                type: string
                              urlRewrite:
                                description: |-
                                  URLRewrite defines a schema for a filter that modifies a request during forwarding.

                                  Support: Extended
                                properties:
                                  hostname:
                                    description: |-
                                      Hostname is the value to be used to replace the Host header value during
                                      forwarding.

                                      Support: Extended
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  path:
                                    description: |-
                                      Path defines a path rewrite.

                                      Support: Extended
                                    properties:
                                      replaceFullPath:
                                        description: |-
                                          ReplaceFullPath specifies the value with which to replace the full path
                                          of a request during a rewrite or redirect.
                                        maxLength: 1024
                                        type: string
                                      replacePrefixMatch:
                                        description: |-
                                          ReplacePrefixMatch specifies the value with which to replace the prefix
                                          match of a request during a rewrite or redirect. For example, a request
                                          to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                          of "/xyz" would be modified to "/xyz/bar".

                                          Note that this matches the behavior of the PathPrefix match type. This
                                          matches full path elements. A path element refers to the list of labels
                                          in the path split by the `/` separator. When specified, a trailing `/` is
                                          ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                          match the prefix `/abc`, but the path `/abcd` would not.

                                          ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                          Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                          the implementation setting the Accepted Condition for the Route to `status: False`.

                                          Request Path | Prefix Match | Replace Prefix | Modified Path
                                        maxLength: 1024
                                        type: string
                                      type:
                                        description: |-
                                          Type defines the type of path modifier. Additional types may be
                                          added in a future release of the API.

                                          Note that values may be added to this enum, implementations
                                          must ensure that unknown values will not cause a crash.

                                          Unknown values here must result in the implementation setting the
                                          Accepted Condition for the Route to `status: False`, with a
                                          Reason of `UnsupportedValue`.
                                        enum:
                                        - ReplaceFullPath
                                        - ReplacePrefixMatch
                                        type: string
                                    required:
                                    - type
                                    type: object
                                    x-kubernetes-validations:
                                    - message: replaceFullPath must be specified when
                                        type is set to 'ReplaceFullPath'
                                      rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                        : true'
                                    - message: type must be 'ReplaceFullPath' when
                                        replaceFullPath is set
                                      rule: 'has(self.replaceFullPath) ? self.type
                                        == ''ReplaceFullPath'' : true'
                                    - message: replacePrefixMatch must be specified
                                        when type is set to 'ReplacePrefixMatch'
                                      rule: 'self.type == ''ReplacePrefixMatch'' ?
                                        has(self.replacePrefixMatch) : true'
                                    - message: type must be 'ReplacePrefixMatch' when
                                        replacePrefixMatch is set
                                      rule: 'has(self.replacePrefixMatch) ? self.type
                                        == ''ReplacePrefixMatch'' : true'
                                type: object
                            required:
                            - type
                            type: object
                            x-kubernetes-validations:
                            - message: filter.requestHeaderModifier must be nil if
                                the filter.type is not RequestHeaderModifier
                              rule: '!(has(self.requestHeaderModifier) && self.type
                                != ''RequestHeaderModifier'')'
                            - message: filter.requestHeaderModifier must be specified
                                for RequestHeaderModifier filter.type
                              rule: '!(!has(self.requestHeaderModifier) && self.type
                                == ''RequestHeaderModifier'')'
                            - message: filter.responseHeaderModifier must be nil if
                                the filter.type is not ResponseHeaderModifier
                              rule: '!(has(self.responseHeaderModifier) && self.type
                                != ''ResponseHeaderModifier'')'
                            - message: filter.responseHeaderModifier must be specified
                                for ResponseHeaderModifier filter.type
                              rule: '!(!has(self.responseHeaderModifier) && self.type
                                == ''ResponseHeaderModifier'')'
                            - message: filter.requestMirror must be nil if the filter.type
                                is not RequestMirror
                              rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                            - message: filter.requestMirror must be specified for
                                RequestMirror filter.type
                              rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                            - message: filter.requestRedirect must be nil if the filter.type
                                is not RequestRedirect
                              rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                            - message: filter.requestRedirect must be specified for
                                RequestRedirect filter.type
                              rule: '!(!has(self.requestRedirect) && self.type ==
                                ''RequestRedirect'')'
                            - message: filter.urlRewrite must be nil if the filter.type
                                is not URLRewrite
                              rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                            - message: filter.urlRewrite must be specified for URLRewrite
                                filter.type
                              rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                            - message: filter.extensionRef must be nil if the filter.type
                                is not ExtensionRef
                              rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                            - message: filter.extensionRef must be specified for ExtensionRef
                                filter.type
                              rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                          maxItems: 16
                          type: array
                          x-kubernetes-validations:
                          - message: May specify either httpRouteFilterRequestRedirect
                              or httpRouteFilterRequestRewrite, but not both
                            rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                              && self.exists(f, f.type == ''URLRewrite''))'
                          - message: RequestHeaderModifier filter cannot be repeated
                            rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                              <= 1
                          - message: ResponseHeaderModifier filter cannot be repeated
                            rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                              <= 1
                          - message: RequestRedirect filter cannot be repeated
                            rule: self.filter(f, f.type == 'RequestRedirect').size()
                              <= 1
                          - message: URLRewrite filter cannot be repeated
                            rule: self.filter(f, f.type == 'URLRewrite').size() <=
                              1
                        matches:
                          default:
                          - path:
                              type: PathPrefix
                              value: /
                          description: |-
                            Matches define conditions used for matching the rule against incoming
                            HTTP requests. Each match is independent, i.e. this rule will be matched
                            if **any** one of the matches is satisfied.

                            For example, take the following matches configuration:

                            ```
                            matches:
                            - path:
                                value: "/foo"
                              headers:
                              - name: "version"
                                value: "v2"
                            - path:
                                value: "/v2/foo"
                            ```

                            For a request to match against this rule, a request must satisfy
                            EITHER of the two conditions:

                            - path prefixed with `/foo` AND contains the header `version: v2`
                            - path prefix of `/v2/foo`

                            See the documentation for HTTPRouteMatch on how to specify multiple
                            match conditions that should be ANDed together.

                            If no matches are specified, the default is a prefix
                            path match on "/", which has the effect of matching every
                            HTTP request.

                            Proxy or Load Balancer routing configuration generated from HTTPRoutes
                            MUST prioritize matches based on the following criteria, continuing on
                            ties. Across all rules specified on applicable Routes, precedence must be
                            given to the match having:

                            * "Exact" path match.
                            * "Prefix" path match with largest number of characters.
                            * Method match.
                            * Largest number of header matches.
                            * Largest number of query param matches.

                            Note: The precedence of RegularExpression path matches are implementation-specific.

                            If ties still exist across multiple Routes, matching precedence MUST be
                            determined in order of the following criteria, continuing on ties:

                            * The oldest Route based on creation timestamp.
                            * The Route appearing first in alphabetical order by
                              "{namespace}/{name}".

                            If ties still exist within an HTTPRoute, matching precedence MUST be granted
                            to the FIRST matching rule (in list order) with a match meeting the above
                            criteria.

                            When no rules matching a request have been successfully attached to the
                            parent a request is coming from, a HTTP 404 status code MUST be returned.
                          items:
                            description: "HTTPRouteMatch defines the predicate used
                              to match requests to a given\naction. Multiple match
                              types are ANDed together, i.e. the match will\nevaluate
                              to true only if all conditions are satisfied.\n\nFor
                              example, the match below will match a HTTP request only
                              if its path\nstarts with `/foo` AND it contains the
                              `version: v1` header:\n\n```\nmatch:\n\n\tpath:\n\t
                              \ value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t
                              \ value \"v1\"\n\n```"
                            properties:
                              headers:
                                description: |-
                                  Headers specifies HTTP request header matchers. Multiple match values are
                                  ANDed together, meaning, a request must match all the specified headers
                                  to select the route.
                                items:
                                  description: |-
                                    HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                    headers.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, only the first
                                        entry with an equivalent name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.

                                        When a header is repeated in an HTTP request, it is
                                        implementation-specific behavior as to how this is represented.
                                        Generally, proxies should follow the guidance from the RFC:
                                        https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                        processing a repeated header, with special handling for "Set-Cookie".
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    type:
                                      default: Exact
                                      description: |-
                                        Type specifies how to match against the value of the header.

                                        Support: Core (Exact)

                                        Support: Implementation-specific (RegularExpression)

                                        Since RegularExpression HeaderMatchType has implementation-specific
                                        conformance, implementations can support POSIX, PCRE or any other dialects
                                        of regular expressions. Please read the implementation's documentation to
                                        determine the supported dialect.
                                      enum:
                                      - Exact
                                      - RegularExpression
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              method:
                                description: |-
                                  Method specifies HTTP method matcher.
                                  When specified, this route will be matched only if the request has the
                                  specified method.

                                  Support: Extended
                                enum:
                                - GET
                                - HEAD
                                - POST
                                - PUT
                                - DELETE
                                - CONNECT
                                - OPTIONS
                                - TRACE
                                - PATCH
                                type: string
                              path:
                                default:
                                  type: PathPrefix
                                  value: /
                                description: |-
                                  Path specifies a HTTP request path matcher. If this field is not
                                  specified, a default prefix match on the "/" path is provided.
                                properties:
                                  type:
                                    default: PathPrefix
                                    description: |-
                                      Type specifies how to match against the path Value.

                                      Support: Core (Exact, PathPrefix)

                                      Support: Implementation-specific (RegularExpression)
                                    enum:
                                    - Exact
                                    - PathPrefix
                                    - RegularExpression
                                    type: string
                                  value:
                                    default: /
                                    description: Value of the HTTP path to match against.
                                    maxLength: 1024
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                - message: value must be an absolute path and start
                                    with '/' when type one of ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? self.value.startsWith(''/'') : true'
                                - message: must not contain '//' when type one of
                                    ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.contains(''//'') : true'
                                - message: must not contain '/./' when type one of
                                    ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.contains(''/./'') : true'
                                - message: must not contain '/../' when type one of
                                    ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.contains(''/../'') : true'
                                - message: must not contain '%2f' when type one of
                                    ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.contains(''%2f'') : true'
                                - message: must not contain '%2F' when type one of
                                    ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.contains(''%2F'') : true'
                                - message: must not contain '#' when type one of ['Exact',
                                    'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.contains(''#'') : true'
                                - message: must not end with '/..' when type one of
                                    ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.endsWith(''/..'') : true'
                                - message: must not end with '/.' when type one of
                                    ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? !self.value.endsWith(''/.'') : true'
                                - message: type must be one of ['Exact', 'PathPrefix',
                                    'RegularExpression']
                                  rule: self.type in ['Exact','PathPrefix'] || self.type
                                    == 'RegularExpression'
                                - message: must only contain valid characters (matching
                                    ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$)
                                    for types ['Exact', 'PathPrefix']
                                  rule: '(self.type in [''Exact'',''PathPrefix''])
                                    ? self.value.matches(r"""^(?:[-A-Za-z0-9/._~!$&''()*+,;=:@]|[%][0-9a-fA-F]{2})+$""")
                                    : true'
                              queryParams:
                                description: |-
                                  QueryParams specifies HTTP query parameter matchers. Multiple match
                                  values are ANDed together, meaning, a request must match all the
                                  specified query parameters to select the route.

                                  Support: Extended
                                items:
                                  description: |-
                                    HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                    query parameters.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP query param to be matched. This must be an
                                        exact string match. (See
                                        https://tools.ietf.org/html/rfc7230#section-2.7.3).

                                        If multiple entries specify equivalent query param names, only the first
                                        entry with an equivalent name MUST be considered for a match. Subsequent
                                        entries with an equivalent query param name MUST be ignored.

                                        If a query param is repeated in an HTTP request, the behavior is
                                        purposely left undefined, since different data planes have different
                                        capabilities. However, it is *recommended* that implementations should
                                        match against the first value of the param if the data plane supports it,
                                        as this behavior is expected in other load balancing contexts outside of
                                        the Gateway API.

                                        Users SHOULD NOT route traffic based on repeated query params to guard
                                        themselves against potential differences in the implementations.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    type:
                                      default: Exact
                                      description: |-
                                        Type specifies how to match against the value of the query parameter.

                                        Support: Extended (Exact)

                                        Support: Implementation-specific (RegularExpression)

                                        Since RegularExpression QueryParamMatchType has Implementation-specific
                                        conformance, implementations can support POSIX, PCRE or any other
                                        dialects of regular expressions. Please read the implementation's
                                        documentation to determine the supported dialect.
                                      enum:
                                      - Exact
                                      - RegularExpression
                                      type: string
                                    value:
                                      description: Value is the value of HTTP query
                                        param to be matched.
                                      maxLength: 1024
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          maxItems: 8
                          type: array
                        sessionPersistence:
                          description: |-
                            SessionPersistence defines and configures session persistence
                            for the route rule.

                            Support: Extended

                            <gateway:experimental>
                          properties:
                            absoluteTimeout:
                              description: |-
                                AbsoluteTimeout defines the absolute timeout of the persistent
                                session. Once the AbsoluteTimeout duration has elapsed, the
                                session becomes invalid.

                                Support: Extended
                              pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                              type: string
                            cookieConfig:
                              description: |-
                                CookieConfig provides configuration settings that are specific
                                to cookie-based session persistence.

                                Support: Core
                              properties:
                                lifetimeType:
                                  default: Session
                                  description: |-
                                    LifetimeType specifies whether the cookie has a permanent or
                                    session-based lifetime. A permanent cookie persists until its
                                    specified expiry time, defined by the Expires or Max-Age cookie
                                    attributes, while a session cookie is deleted when the current
                                    session ends.

                                    When set to "Permanent", AbsoluteTimeout indicates the
                                    cookie's lifetime via the Expires or Max-Age cookie attributes
                                    and is required.

                                    When set to "Session", AbsoluteTimeout indicates the
                                    absolute lifetime of the cookie tracked by the gateway and
                                    is optional.

                                    Support: Core for "Session" type

                                    Support: Extended for "Permanent" type
                                  enum:
                                  - Permanent
                                  - Session
                                  type: string
                              type: object
                            idleTimeout:
                              description: |-
                                IdleTimeout defines the idle timeout of the persistent session.
                                Once the session has been idle for more than the specified
                                IdleTimeout duration, the session becomes invalid.

                                Support: Extended
                              pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                              type: string
                            sessionName:
                              description: |-
                                SessionName defines the name of the persistent session token
                                which may be reflected in the cookie or the header. Users
                                should avoid reusing session names to prevent unintended
                                consequences, such as rejection or unpredictable behavior.

                                Support: Implementation-specific
                              maxLength: 128
                              type: string
                            type:
                              default: Cookie
                              description: |-
                                Type defines the type of session persistence such as through
                                the use a header or cookie. Defaults to cookie based session
                                persistence.

                                Support: Core for "Cookie" type

                                Support: Extended for "Header" type
                              enum:
                              - Cookie
                              - Header
                              type: string
                          type: object
                          x-kubernetes-validations:
                          - message: AbsoluteTimeout must be specified when cookie
                              lifetimeType is Permanent
                            rule: '!has(self.cookieConfig.lifetimeType) || self.cookieConfig.lifetimeType
                              != ''Permanent'' || has(self.absoluteTimeout)'
                        timeouts:
                          description: |-
                            Timeouts defines the timeouts that can be configured for an HTTP request.

                            Support: Extended

                            <gateway:experimental>
                          properties:
                            backendRequest:
                              description: |-
                                BackendRequest specifies a timeout for an individual request from the gateway
                                to a backend. This covers the time from when the request first starts being
                                sent from the gateway to when the full response has been received from the backend.

                                Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                                completely. Implementations that cannot completely disable the timeout MUST
                                instead interpret the zero duration as the longest possible value to which
                                the timeout can be set.

                                An entire client HTTP transaction with a gateway, covered by the Request timeout,
                                may result in more than one call from the gateway to the destination backend,
                                for example, if automatic retries are supported.

                                Because the Request timeout encompasses the BackendRequest timeout, the value of
                                BackendRequest must be <= the value of Request timeout.

                                Support: Extended
                              pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                              type: string
                            request:
                              description: |-
                                Request specifies the maximum duration for a gateway to respond to an HTTP request.
                                If the gateway has not been able to respond before this deadline is met, the gateway
                                MUST return a timeout error.

                                For example, setting the `rules.timeouts.request` field to the value `10s` in an
                                `HTTPRoute` will cause a timeout if a client request is taking longer than 10 seconds
                                to complete.

                                Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                                completely. Implementations that cannot completely disable the timeout MUST
                                instead interpret the zero duration as the longest possible value to which
                                the timeout can be set.

                                This timeout is intended to cover as close to the whole request-response transaction
                                as possible although an implementation MAY choose to start the timeout after the entire
                                request stream has been received instead of immediately after the transaction is
                                initiated by the client.

                                When this field is unspecified, request timeout behavior is implementation-specific.

                                Support: Extended
                              pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                              type: string
                          type: object
                          x-kubernetes-validations:
                          - message: backendRequest timeout cannot be longer than
                              request timeout
                            rule: '!(has(self.request) && has(self.backendRequest)
                              && duration(self.request) != duration(''0s'') && duration(self.backendRequest)
                              > duration(self.request))'
                      type: object
                      x-kubernetes-validations:
                      - message: RequestRedirect filter must not be used together
                          with backendRefs
                        rule: '(has(self.backendRefs) && size(self.backendRefs) >
                          0) ? (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))):
                          true'
                      - message: When using RequestRedirect filter with path.replacePrefixMatch,
                          exactly one PathPrefix match must be specified
                        rule: '(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect)
                          && has(f.requestRedirect.path) && f.requestRedirect.path.type
                          == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                          ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                          || self.matches[0].path.type != ''PathPrefix'') ? false
                          : true) : true'
                      - message: When using URLRewrite filter with path.replacePrefixMatch,
                          exactly one PathPrefix match must be specified
                        rule: '(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite)
                          && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                          && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches)
                          != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                          != ''PathPrefix'') ? false : true) : true'
                      - message: Within backendRefs, when using RequestRedirect filter
                          with path.replacePrefixMatch, exactly one PathPrefix match
                          must be specified
                        rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                          (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect)
                          && has(f.requestRedirect.path) && f.requestRedirect.path.type
                          == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                          )) ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                          || self.matches[0].path.type != ''PathPrefix'') ? false
                          : true) : true'
                      - message: Within backendRefs, When using URLRewrite filter
                          with path.replacePrefixMatch, exactly one PathPrefix match
                          must be specified
                        rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                          (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite)
                          && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                          && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches)
                          != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                          != ''PathPrefix'') ? false : true) : true'
                    maxItems: 16
                    type: array
                type: object
              ingress:
                description: IngressSpec defines the desired state of an Ingress.
                properties:
                  defaultBackend:
                    description: |-
                      defaultBackend is the backend that should handle requests that don't
                      match any rule. If Rules are not specified, DefaultBackend must be specified.
                      If DefaultBackend is not set, the handling of requests that do not match any
                      of the rules will be up to the Ingress controller.
                    properties:
                      resource:
                        description: |-
                          resource is an ObjectRef to another Kubernetes resource in the namespace
                          of the Ingress object. If resource is specified, a service.Name and
                          service.Port must not be specified.
                          This is a mutually exclusive setting with "Service".
                        properties:
                          apiGroup:
                            description: |-
                              APIGroup is the group for the resource being referenced.
                              If APIGroup is not specified, the specified Kind must be in the core API group.
                              For any other third-party types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                        x-kubernetes-map-type: atomic
                      service:
                        description: |-
                          service references a service as a backend.
                          This is a mutually exclusive setting with "Resource".
                        properties:
                          name:
                            description: |-
                              name is the referenced service. The service must exist in
                              the same namespace as the Ingress object.
                            type: string
                          port:
                            description: |-
                              port of the referenced service. A port name or port number
                              is required for a IngressServiceBackend.
                            properties:
                              name:
                                description: |-
                                  name is the name of the port on the Service.
                                  This is a mutually exclusive setting with "Number".
                                type: string
                              number:
                                description: |-
                                  number is the numerical port number (e.g. 80) on the Service.
                                  This is a mutually exclusive setting with "Name".
                                format: int32
                                type: integer
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - name
                        type: object
                    type: object
                  ingressClassName:
                    description: |-
                      ingressClassName is the name of an IngressClass cluster resource. Ingress
                      controller implementations use this field to know whether they should be
                      serving this Ingress resource, by a transitive connection
                      (controller -> IngressClass -> Ingress resource). Although the
                      `kubernetes.io/ingress.class` annotation (simple constant name) was never
                      formally defined, it was widely supported by Ingress controllers to create
                      a direct binding between Ingress controller and Ingress resources. Newly
                      created Ingress resources should prefer using the field. However, even
                      though the annotation is officially deprecated, for backwards compatibility
                      reasons, ingress controllers should still honor that annotation if present.
                    type: string
                  rules:
                    description: |-
                      rules is a list of host rules used to configure the Ingress. If unspecified,
                      or no rule matches, all traffic is sent to the default backend.
                    items:
                      description: |-
                        IngressRule represents the rules mapping the paths under a specified host to
                        the related backend services. Incoming requests are first evaluated for a host
                        match, then routed to the backend associated with the matching IngressRuleValue.
                      properties:
                        host:
                          description: "host is the fully qualified domain name of
                            a network host, as defined by RFC 3986.\nNote the following
                            deviations from the \"host\" part of the\nURI as defined
                            in RFC 3986:\n1. IPs are not allowed. Currently an IngressRuleValue
                            can only apply to\n   the IP in the Spec of the parent
                            Ingress.\n2. The `:` delimiter is not respected because
                            ports are not allowed.\n\t  Currently the port of an Ingress
                            is implicitly :80 for http and\n\t  :443 for https.\nBoth
                            these may change in the future.\nIncoming requests are
                            matched against the host before the\nIngressRuleValue.
                            If the host is unspecified, the Ingress routes all\ntraffic
                            based on the specified IngressRuleValue.\n\nhost can be
                            \"precise\" which is a domain name without the terminating
                            dot of\na network host (e.g. \"foo.bar.com\") or \"wildcard\",
                            which is a domain name\nprefixed with a single wildcard
                            label (e.g. \"*.foo.com\").\nThe wildcard character '*'
                            must appear by itself as the first DNS label and\nmatches
                            only a single label. You cannot have a wildcard label
                            by itself (e.g. Host == \"*\").\nRequests will be matched
                            against the Host field in the following way:\n1. If host
                            is precise, the request matches this rule if the http
                            host header is equal to Host.\n2. If host is a wildcard,
                            then the request matches this rule if the http host header\nis
                            to equal to the suffix (removing the first label) of the
                            wildcard rule."
                          type: string
                        http:
                          description: |-
                            HTTPIngressRuleValue is a list of http selectors pointing to backends.
                            In the example: http://<host>/<path>?<searchpart> -> backend where
                            where parts of the url correspond to RFC 3986, this resource will be used
                            to match against everything after the last '/' and before the first '?'
                            or '#'.
                          properties:
                            paths:
                              description: paths is a collection of paths that map
                                requests to backends.
                              items:
                                description: |-
                                  HTTPIngressPath associates a path with a backend. Incoming urls matching the
                                  path are forwarded to the backend.
                                properties:
                                  backend:
                                    description: |-
                                      backend defines the referenced service endpoint to which the traffic
                                      will be forwarded to.
                                    properties:
                                      resource:
                                        description: |-
                                          resource is an ObjectRef to another Kubernetes resource in the namespace
                                          of the Ingress object. If resource is specified, a service.Name and
                                          service.Port must not be specified.
                                          This is a mutually exclusive setting with "Service".
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      service:
                                        description: |-
                                          service references a service as a backend.
                                          This is a mutually exclusive setting with "Resource".
                                        properties:
                                          name:
                                            description: |-
                                              name is the referenced service. The service must exist in
                                              the same namespace as the Ingress object.
                                            type: string
                                          port:
                                            description: |-
                                              port of the referenced service. A port name or port number
                                              is required for a IngressServiceBackend.
                                            properties:
                                              name:
                                                description: |-
                                                  name is the name of the port on the Service.
                                                  This is a mutually exclusive setting with "Number".
                                                type: string
                                              number:
                                                description: |-
                                                  number is the numerical port number (e.g. 80) on the Service.
                                                  This is a mutually exclusive setting with "Name".
                                                format: int32
                                                type: integer
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                        - name
                                        type: object
                                    type: object
                                  path:
                                    description: |-
                                      path is matched against the path of an incoming request. Currently it can
                                      contain characters disallowed from the conventional "path" part of a URL
                                      as defined by RFC 3986. Paths must begin with a '/' and must be present
                                      when using PathType with value "Exact" or "Prefix".
                                    type: string
                                  pathType:
                                    description: |-
                                      pathType determines the interpretation of the path matching. PathType can
                                      be one of the following values:
                                      * Exact: Matches the URL path exactly.
                                      * Prefix: Matches based on a URL path prefix split by '/'. Matching is
                                        done on a path element by element basis. A path element refers is the
                                        list of labels in the path split by the '/' separator. A request is a
                                        match for path p if every p is an element-wise prefix of p of the
                                        request path. Note that if the last element of the path is a substring
                                        of the last element in request path, it is not a match (e.g. /foo/bar
                                        matches /foo/bar/baz, but does not match /foo/barbaz).
                                      * ImplementationSpecific: Interpretation of the Path matching is up to
                                        the IngressClass. Implementations can treat this as a separate PathType
                                        or treat it identically to Prefix or Exact path types.
                                      Implementations are required to support all path types.
                                    type: string
                                required:
                                - backend
                                - pathType
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - paths
                          type: object
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  tls:
                    description: |-
                      tls represents the TLS configuration. Currently the Ingress only supports a
                      single TLS port, 443. If multiple members of this list specify different hosts,
                      they will be multiplexed on the same port according to the hostname specified
                      through the SNI TLS extension, if the ingress controller fulfilling the
                      ingress supports SNI.
                    items:
                      description: IngressTLS describes the transport layer security
                        associated with an ingress.
                      properties:
                        hosts:
                          description: |-
                            hosts is a list of hosts included in the TLS certificate. The values in
                            this list must match the name/s used in the tlsSecret. Defaults to the
                            wildcard host setting for the loadbalancer controller fulfilling this
                            Ingress, if left unspecified.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        secretName:
                          description: |-
                            secretName is the name of the secret used to terminate TLS traffic on
                            port 443. Field is left optional to allow TLS routing based on SNI
                            hostname alone. If the SNI host in a listener conflicts with the "Host"
                            header field used by an IngressRule, the SNI host is used for termination
                            and value of the "Host" header is used for routing.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              organization:
                description: organization is the name of the Organization.
                minLength: 5
                type: string
            required:
            - appPolicy
            - domains
            - organization
            type: object
            x-kubernetes-validations:
            - message: exactly one of ingress or httpRoute must be specified
              rule: '[has(self.ingress), has(self.httpRoute)].filter(x, x).size()
                == 1'
          status:
            description: status defines the observed state of KDexHost
            properties:
              conditions:
                description: |-
                  conditions represent the current state of the KDexHost resource.
                  Each condition has a unique type and reflects the status of a specific aspect of the resource.

                  Standard condition types include:
                  - "Available": the resource is fully functional
                  - "Progressing": the resource is being created or updated
                  - "Degraded": the resource failed to reach or maintain its desired state

                  The status of each condition is one of True, False, or Unknown.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
